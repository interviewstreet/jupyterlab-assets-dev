(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[8180,2310],{48180:(n,e,t)=>{"use strict";t.r(e);t.d(e,{default:()=>p});var s=t(10890);var i=t(90147);var a=t(70278);var o=t(29131);var l=t(66853);var r=t(47063);function d(n,e,t){const s=e.load("jupyterlab");const i=t.serviceManager.sessions;const a=t.serviceManager.kernelspecs;function d(n){return!!((n.name||l.PathExt.basename(n.path)).indexOf(".")!==-1||n.name)}n.add({name:s.__("Kernels"),running:()=>(0,r.toArray)(i.running()).filter(d).map((n=>new h(n))),shutdownAll:()=>i.shutdownAll(),refreshRunning:()=>i.refreshRunning(),runningChanged:i.runningChanged,shutdownLabel:s.__("Shut Down"),shutdownAllLabel:s.__("Shut Down All"),shutdownAllConfirmationText:s.__("Are you sure you want to permanently shut down all running kernels?")});class h{constructor(n){this._model=n}open(){const{path:n,type:e}=this._model;if(e.toLowerCase()==="console"){void t.commands.execute("console:open",{path:n})}else{void t.commands.execute("docmanager:open",{path:n})}}shutdown(){return i.shutdown(this._model.id)}icon(){const{name:n,path:e,type:t}=this._model;if((n||l.PathExt.basename(e)).indexOf(".ipynb")!==-1){return o.notebookIcon}else if(t.toLowerCase()==="console"){return o.consoleIcon}return o.fileIcon}label(){return this._model.name||l.PathExt.basename(this._model.path)}labelTitle(){const{kernel:n,path:e}=this._model;let t=n===null||n===void 0?void 0:n.name;if(t&&a.specs){const n=a.specs.kernelspecs[t];t=n?n.display_name:"unknown"}return s.__("Path: %1\nKernel: %2",e,t)}}}var h=t(70865);var u=t(8595);class c{constructor(n){this._tabsChanged=new u.Signal(this);this._widgets=[];this._labShell=n;this._labShell.layoutModified.connect(this._emitTabsChanged,this)}get tabsChanged(){return this._tabsChanged}addWidget(n){n.title.changed.connect(this._emitTabsChanged,this);this._widgets.push(n)}_emitTabsChanged(){this._widgets.forEach((n=>{n.title.changed.disconnect(this._emitTabsChanged,this)}));this._widgets=[];this._tabsChanged.emit(void 0)}}function g(n,e,t){const s=new c(t);const i=e.load("jupyterlab");n.add({name:i.__("Open Tabs"),running:()=>(0,r.toArray)(t.widgets("main")).map((n=>{s.addWidget(n);return new a(n)})),shutdownAll:()=>{(0,r.toArray)(t.widgets("main")).forEach((n=>{n.close()}))},refreshRunning:()=>void 0,runningChanged:s.tabsChanged,shutdownLabel:i.__("Close"),shutdownAllLabel:i.__("Close All"),shutdownAllConfirmationText:i.__("Are you sure you want to close all open tabs?")});class a{constructor(n){this._widget=n}open(){t.activateById(this._widget.id)}shutdown(){this._widget.close()}icon(){const n=this._widget.title.icon;return n instanceof o.LabIcon?n:o.fileIcon}label(){return this._widget.title.label}labelTitle(){let n;if(this._widget instanceof h.DocumentWidget){n=this._widget.context.path}else{n=this._widget.title.label}return n}}}const _={activate:w,id:"@jupyterlab/running-extension:plugin",provides:i.IRunningSessionManagers,requires:[a.ITranslator],optional:[s.ILayoutRestorer,s.ILabShell],autoStart:true};const p=_;function w(n,e,t,s){const a=e.load("jupyterlab");const l=new i.RunningSessionManagers;const r=new i.RunningSessions(l,e);r.id="jp-running-sessions";r.title.caption=a.__("Running Terminals and Kernels");r.title.icon=o.runningIcon;r.node.setAttribute("role","region");r.node.setAttribute("aria-label",a.__("Running Sessions section"));if(t){t.add(r,"running-sessions")}if(s){g(l,e,s)}d(l,e,n);n.shell.add(r,"left",{rank:200});return l}}}]);
//# sourceMappingURL=8180.c40c0c3f9ff781fca7b5.js.map?v=c40c0c3f9ff781fca7b5
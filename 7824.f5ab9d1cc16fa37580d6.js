"use strict";(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[7824],{37824:(e,n,t)=>{t.r(n);t.d(n,{default:()=>j});var o=t(49655);var r=t(87447);var s=t(52959);var l=t(98679);var a=t(39903);var i=t(69995);var c=t(16179);var d=t(95009);var u=t(59238);var p=t(68299);var m=t(50724);var v=t(27425);var f=t(10535);var C=t(55172);var g=t(82524);var h=t(60796);const b={id:"@jupyterlab/console-extension:foreign",description:"Add foreign handler of IOPub messages to the console.",requires:[a.IConsoleTracker,p.ISettingRegistry,m.ITranslator],optional:[r.ICommandPalette],activate:k,autoStart:true};const y=b;function k(e,n,t,o,r){const s=o.load("jupyterlab");const{shell:l}=e;n.widgetAdded.connect(((e,n)=>{const o=n.console;const r=new a.ForeignHandler({sessionContext:o.sessionContext,parent:o});_.foreignHandlerProperty.set(o,r);void t.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then((({composite:e})=>{const n=e;r.enabled=n}));o.disposed.connect((()=>{r.dispose()}))}));const{commands:i}=e;const c=s.__("Console");const d="console:toggle-show-all-kernel-activity";function u(e){const t=n.currentWidget;const o=e["activate"]!==false;if(o&&t){l.activateById(t.id)}return t}i.addCommand(d,{label:e=>s.__("Show All Kernel Activity"),execute:e=>{const n=u(e);if(!n){return}const t=_.foreignHandlerProperty.get(n.console);if(t){t.enabled=!t.enabled}},isToggled:()=>{var e;return n.currentWidget!==null&&!!((e=_.foreignHandlerProperty.get(n.currentWidget.console))===null||e===void 0?void 0:e.enabled)},isEnabled:()=>n.currentWidget!==null&&n.currentWidget===l.currentWidget});if(r){r.addItem({command:d,category:c,args:{isPalette:true}})}}var _;(function(e){e.foreignHandlerProperty=new h.AttachedProperty({name:"foreignHandler",create:()=>undefined})})(_||(_={}));var x;(function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets";e.create="console:create";e.clear="console:clear";e.runUnforced="console:run-unforced";e.runForced="console:run-forced";e.linebreak="console:linebreak";e.interrupt="console:interrupt-kernel";e.restart="console:restart-kernel";e.closeAndShutdown="console:close-and-shutdown";e.open="console:open";e.inject="console:inject";e.changeKernel="console:change-kernel";e.getKernel="console:get-kernel";e.enterToExecute="console:enter-to-execute";e.shiftEnterToExecute="console:shift-enter-to-execute";e.interactionMode="console:interaction-mode";e.replaceSelection="console:replace-selection";e.shutdown="console:shutdown";e.invokeCompleter="completer:invoke-console";e.selectCompleter="completer:select-console"})(x||(x={}));const w={id:"@jupyterlab/console-extension:tracker",description:"Provides the console widget tracker.",provides:a.IConsoleTracker,requires:[a.ConsolePanel.IContentFactory,s.IEditorServices,u.IRenderMimeRegistry,p.ISettingRegistry],optional:[o.ILayoutRestorer,i.IDefaultFileBrowser,d.IMainMenu,r.ICommandPalette,c.ILauncher,o.ILabStatus,r.ISessionContextDialogs,v.IFormRendererRegistry,m.ITranslator],activate:K,autoStart:true};const I={id:"@jupyterlab/console-extension:factory",description:"Provides the console widget content factory.",provides:a.ConsolePanel.IContentFactory,requires:[s.IEditorServices],autoStart:true,activate:(e,n)=>{const t=n.factoryService.newInlineEditor;return new a.ConsolePanel.ContentFactory({editorFactory:t})}};const S={id:"@jupyterlab/console-extension:kernel-status",description:"Adds the console to the kernel status indicator model.",autoStart:true,requires:[a.IConsoleTracker,r.IKernelStatusModel],activate:(e,n,t)=>{const o=e=>{let t=null;if(e&&n.has(e)){return e.sessionContext}return t};t.addSessionProvider(o)}};const E={id:"@jupyterlab/console-extension:cursor-position",description:"Adds the console to the code editor cursor position model.",autoStart:true,requires:[a.IConsoleTracker,s.IPositionModel],activate:(e,n,t)=>{let o=null;const r=async e=>{let r=null;if(e!==o){o===null||o===void 0?void 0:o.console.promptCellCreated.disconnect(t.update);o=null;if(e&&n.has(e)){e.console.promptCellCreated.connect(t.update);const n=e.console.promptCell;r=null;if(n){await n.ready;r=n.editor}o=e}}else if(e){const n=e.console.promptCell;r=null;if(n){await n.ready;r=n.editor}}return r};t.addEditorProvider(r)}};const P={id:"@jupyterlab/console-extension:completer",description:"Adds completion to the console.",autoStart:true,requires:[a.IConsoleTracker],optional:[l.ICompletionProviderManager,m.ITranslator,r.ISanitizer],activate:A};const M=[I,w,y,S,E,P];const j=M;async function K(e,n,t,o,s,l,i,c,d,u,p,h,b,y){const k=y!==null&&y!==void 0?y:m.nullTranslator;const _=k.load("jupyterlab");const w=e.serviceManager;const{commands:I,shell:S}=e;const E=_.__("Console");const P=h!==null&&h!==void 0?h:new r.SessionContextDialogs({translator:k});const M=new r.WidgetTracker({namespace:"console"});if(l){void l.restore(M,{command:x.create,args:e=>{const{path:n,name:t,kernelPreference:o}=e.console.sessionContext;return{path:n,name:t,kernelPreference:{...o}}},name:e=>{var n;return(n=e.console.sessionContext.path)!==null&&n!==void 0?n:C.UUID.uuid4()},when:w.ready})}if(u){void w.ready.then((()=>{let e=null;const n=()=>{if(e){e.dispose();e=null}const n=w.kernelspecs.specs;if(!n){return}e=new g.DisposableSet;for(const t in n.kernelspecs){const o=t===n.default?0:Infinity;const r=n.kernelspecs[t];const s=r.resources["logo-svg"]||r.resources["logo-64x64"];e.add(u.add({command:x.create,args:{isLauncher:true,kernelPreference:{name:t}},category:_.__("Console"),rank:o,kernelIconUrl:s,metadata:{kernel:C.JSONExt.deepCopy(r.metadata||{})}}))}};n();w.kernelspecs.specsChanged.connect(n)}))}async function j(e){var r,l;await w.ready;const i=new a.ConsolePanel({manager:w,contentFactory:n,mimeTypeService:t.mimeTypeService,rendermime:o,sessionDialogs:P,translator:k,setBusy:(r=p&&(()=>p.setBusy()))!==null&&r!==void 0?r:undefined,...e});const c=(await s.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;i.console.node.dataset.jpInteractionMode=c;await M.add(i);i.sessionContext.propertyChanged.connect((()=>{void M.save(i)}));S.add(i,"main",{ref:e.ref,mode:e.insertMode,activate:e.activate!==false,type:(l=e.type)!==null&&l!==void 0?l:"Console"});return i}const K="@jupyterlab/console-extension:tracker";let A;let T={};async function B(e){A=(await s.get(K,"interactionMode")).composite;T=(await s.get(K,"promptCellConfig")).composite;const n=e=>{var n,t;e.console.node.dataset.jpInteractionMode=A;e.console.editorConfig=T;(t=(n=e.console.promptCell)===null||n===void 0?void 0:n.editor)===null||t===void 0?void 0:t.setOptions(T)};if(e){n(e)}else{M.forEach(n)}}s.pluginChanged.connect(((e,n)=>{if(n===K){void B()}}));await B();if(b){const e=b.getRenderer("@jupyterlab/codemirror-extension:plugin.defaultConfig");if(e){b.addRenderer("@jupyterlab/console-extension:tracker.promptCellConfig",e)}}M.widgetAdded.connect(((e,n)=>{void B(n)}));I.addCommand(x.autoClosingBrackets,{execute:async e=>{var n;T.autoClosingBrackets=!!((n=e["force"])!==null&&n!==void 0?n:!T.autoClosingBrackets);await s.set(K,"promptCellConfig",T)},label:_.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>T.autoClosingBrackets});function W(){return M.currentWidget!==null&&M.currentWidget===S.currentWidget}let D=x.open;I.addCommand(D,{label:_.__("Open a console for the provided `path`."),execute:e=>{const n=e["path"];const t=M.find((e=>{var t;return((t=e.console.sessionContext.session)===null||t===void 0?void 0:t.path)===n}));if(t){if(e.activate!==false){S.activateById(t.id)}return t}else{return w.ready.then((()=>{const t=(0,f.find)(w.sessions.running(),(e=>e.path===n));if(t){return j(e)}return Promise.reject(`No running kernel session for path: ${n}`)}))}}});D=x.create;I.addCommand(D,{label:e=>{var n,t,o,r;if(e["isPalette"]){return _.__("New Console")}else if(e["isLauncher"]&&e["kernelPreference"]){const s=e["kernelPreference"];return(r=(o=(t=(n=w.kernelspecs)===null||n===void 0?void 0:n.specs)===null||t===void 0?void 0:t.kernelspecs[s.name||""])===null||o===void 0?void 0:o.display_name)!==null&&r!==void 0?r:""}return _.__("Console")},icon:e=>e["isPalette"]?undefined:v.consoleIcon,execute:e=>{var n;const t=(n=e["basePath"]||e["cwd"]||(i===null||i===void 0?void 0:i.model.path))!==null&&n!==void 0?n:"";return j({basePath:t,...e})}});function R(e){const n=M.currentWidget;const t=e["activate"]!==false;if(t&&n){S.activateById(n.id)}return n!==null&&n!==void 0?n:null}I.addCommand(x.clear,{label:_.__("Clear Console Cells"),execute:e=>{const n=R(e);if(!n){return}n.console.clear()},isEnabled:W});I.addCommand(x.runUnforced,{label:_.__("Run Cell (unforced)"),execute:e=>{const n=R(e);if(!n){return}return n.console.execute()},isEnabled:W});I.addCommand(x.runForced,{label:_.__("Run Cell (forced)"),execute:e=>{const n=R(e);if(!n){return}return n.console.execute(true)},isEnabled:W});I.addCommand(x.linebreak,{label:_.__("Insert Line Break"),execute:e=>{const n=R(e);if(!n){return}n.console.insertLinebreak()},isEnabled:W});I.addCommand(x.replaceSelection,{label:_.__("Replace Selection in Console"),execute:e=>{const n=R(e);if(!n){return}const t=e["text"]||"";n.console.replaceSelection(t)},isEnabled:W});I.addCommand(x.interrupt,{label:_.__("Interrupt Kernel"),execute:e=>{var n;const t=R(e);if(!t){return}const o=(n=t.console.sessionContext.session)===null||n===void 0?void 0:n.kernel;if(o){return o.interrupt()}},isEnabled:W});I.addCommand(x.restart,{label:_.__("Restart Kernel…"),execute:e=>{const n=R(e);if(!n){return}return P.restart(n.console.sessionContext)},isEnabled:W});I.addCommand(x.shutdown,{label:_.__("Shut Down"),execute:e=>{const n=R(e);if(!n){return}return n.console.sessionContext.shutdown()}});I.addCommand(x.closeAndShutdown,{label:_.__("Close and Shut Down…"),execute:e=>{const n=R(e);if(!n){return}return(0,r.showDialog)({title:_.__("Shut down the console?"),body:_.__('Are you sure you want to close "%1"?',n.title.label),buttons:[r.Dialog.cancelButton({ariaLabel:_.__("Cancel console Shut Down")}),r.Dialog.warnButton({ariaLabel:_.__("Confirm console Shut Down")})]}).then((e=>{if(e.button.accept){return I.execute(x.shutdown,{activate:false}).then((()=>{n.dispose();return true}))}else{return false}}))},isEnabled:W});I.addCommand(x.inject,{label:_.__("Inject some code in a console."),execute:e=>{const n=e["path"];M.find((t=>{var o;if(((o=t.console.sessionContext.session)===null||o===void 0?void 0:o.path)===n){if(e["activate"]!==false){S.activateById(t.id)}void t.console.inject(e["code"],e["metadata"]);return true}return false}))},isEnabled:W});I.addCommand(x.changeKernel,{label:_.__("Change Kernel…"),execute:e=>{const n=R(e);if(!n){return}return P.selectKernel(n.console.sessionContext)},isEnabled:W});I.addCommand(x.getKernel,{label:_.__("Get Kernel"),execute:e=>{var n;const t=R({activate:false,...e});if(!t){return}return(n=t.sessionContext.session)===null||n===void 0?void 0:n.kernel},isEnabled:W});if(d){[x.create,x.linebreak,x.clear,x.runUnforced,x.runForced,x.restart,x.interrupt,x.changeKernel,x.closeAndShutdown].forEach((e=>{d.addItem({command:e,category:E,args:{isPalette:true}})}))}if(c){c.fileMenu.closeAndCleaners.add({id:x.closeAndShutdown,isEnabled:W});c.kernelMenu.kernelUsers.changeKernel.add({id:x.changeKernel,isEnabled:W});c.kernelMenu.kernelUsers.clearWidget.add({id:x.clear,isEnabled:W});c.kernelMenu.kernelUsers.interruptKernel.add({id:x.interrupt,isEnabled:W});c.kernelMenu.kernelUsers.restartKernel.add({id:x.restart,isEnabled:W});c.kernelMenu.kernelUsers.shutdownKernel.add({id:x.shutdown,isEnabled:W});c.runMenu.codeRunners.run.add({id:x.runForced,isEnabled:W});c.editMenu.clearers.clearCurrent.add({id:x.clear,isEnabled:W});c.helpMenu.getKernel.add({id:x.getKernel,isEnabled:W})}const F={notebook:_.__("Execute with Shift+Enter"),terminal:_.__("Execute with Enter")};I.addCommand(x.interactionMode,{label:e=>{var n;return(n=F[e["interactionMode"]])!==null&&n!==void 0?n:"Set the console interaction mode."},execute:async e=>{const n="keyMap";try{await s.set(K,"interactionMode",e["interactionMode"])}catch(t){console.error(`Failed to set ${K}:${n} - ${t.message}`)}},isToggled:e=>e["interactionMode"]===A});return M}function A(e,n,t,o,s){if(!t){return}const l=(o!==null&&o!==void 0?o:m.nullTranslator).load("jupyterlab");const a=s!==null&&s!==void 0?s:new r.Sanitizer;e.commands.addCommand(x.invokeCompleter,{label:l.__("Display the completion helper."),execute:()=>{const e=n.currentWidget&&n.currentWidget.id;if(e){return t.invoke(e)}}});e.commands.addCommand(x.selectCompleter,{label:l.__("Select the completion suggestion."),execute:()=>{const e=n.currentWidget&&n.currentWidget.id;if(e){return t.select(e)}}});e.commands.addKeyBinding({command:x.selectCompleter,keys:["Enter"],selector:".jp-ConsolePanel .jp-mod-completer-active"});const i=async(e,n)=>{var o,r;const s={editor:(r=(o=n.console.promptCell)===null||o===void 0?void 0:o.editor)!==null&&r!==void 0?r:null,session:n.console.sessionContext.session,widget:n};await t.updateCompleter(s);n.console.promptCellCreated.connect(((e,o)=>{const r={editor:o.editor,session:e.sessionContext.session,widget:n,sanitzer:a};t.updateCompleter(r).catch(console.error)}));n.console.sessionContext.sessionChanged.connect((()=>{var e,o;const r={editor:(o=(e=n.console.promptCell)===null||e===void 0?void 0:e.editor)!==null&&o!==void 0?o:null,session:n.console.sessionContext.session,widget:n,sanitizer:a};t.updateCompleter(r).catch(console.error)}))};n.widgetAdded.connect(i);t.activeProvidersChanged.connect((()=>{n.forEach((e=>{i(undefined,e).catch((e=>console.error(e)))}))}))}}}]);
//# sourceMappingURL=7824.f5ab9d1cc16fa37580d6.js.map?v=f5ab9d1cc16fa37580d6
(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[7824],{37824:(e,n,t)=>{"use strict";t.r(n);t.d(n,{default:()=>I});var o=t(10890);var r=t(67616);var a=t(41994);var s=t(95990);var l=t(20942);var c=t(17867);var i=t(48305);var d=t(21464);var u=t(95994);var p=t(70278);var f=t(29131);var C=t(47063);var m=t(98034);var g=t(15989);var v=t(97083);const b={id:"@jupyterlab/console-extension:foreign",requires:[s.IConsoleTracker,u.ISettingRegistry,p.ITranslator],optional:[r.ICommandPalette],activate:h,autoStart:true};const k=b;function h(e,n,t,o,r){const a=o.load("jupyterlab");const{shell:l}=e;n.widgetAdded.connect(((e,n)=>{const o=n.console;const r=new s.ForeignHandler({sessionContext:o.sessionContext,parent:o});y.foreignHandlerProperty.set(o,r);void t.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then((({composite:e})=>{const n=e;r.enabled=n}));o.disposed.connect((()=>{r.dispose()}))}));const{commands:c}=e;const i=a.__("Console");const d="console:toggle-show-all-kernel-activity";function u(e){const t=n.currentWidget;const o=e["activate"]!==false;if(o&&t){l.activateById(t.id)}return t}c.addCommand(d,{label:e=>a.__("Show All Kernel Activity"),execute:e=>{const n=u(e);if(!n){return}const t=y.foreignHandlerProperty.get(n.console);if(t){t.enabled=!t.enabled}},isToggled:()=>{var e;return n.currentWidget!==null&&!!((e=y.foreignHandlerProperty.get(n.currentWidget.console))===null||e===void 0?void 0:e.enabled)},isEnabled:()=>n.currentWidget!==null&&n.currentWidget===l.currentWidget});if(r){r.addItem({command:d,category:i,args:{isPalette:true}})}}var y;(function(e){e.foreignHandlerProperty=new v.AttachedProperty({name:"foreignHandler",create:()=>undefined})})(y||(y={}));var _;(function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets";e.create="console:create";e.clear="console:clear";e.runUnforced="console:run-unforced";e.runForced="console:run-forced";e.linebreak="console:linebreak";e.interrupt="console:interrupt-kernel";e.restart="console:restart-kernel";e.closeAndShutdown="console:close-and-shutdown";e.open="console:open";e.inject="console:inject";e.changeKernel="console:change-kernel";e.enterToExecute="console:enter-to-execute";e.shiftEnterToExecute="console:shift-enter-to-execute";e.interactionMode="console:interaction-mode";e.replaceSelection="console:replace-selection"})(_||(_={}));const x={id:"@jupyterlab/console-extension:tracker",provides:s.IConsoleTracker,requires:[s.ConsolePanel.IContentFactory,a.IEditorServices,d.IRenderMimeRegistry,u.ISettingRegistry,p.ITranslator],optional:[o.ILayoutRestorer,l.IFileBrowserFactory,i.IMainMenu,r.ICommandPalette,c.ILauncher,o.ILabStatus,r.ISessionContextDialogs],activate:B,autoStart:true};const w={id:"@jupyterlab/console-extension:factory",provides:s.ConsolePanel.IContentFactory,requires:[a.IEditorServices],autoStart:true,activate:(e,n)=>{const t=n.factoryService.newInlineEditor;return new s.ConsolePanel.ContentFactory({editorFactory:t})}};const S=[w,x,k];const I=S;async function B(e,n,t,o,a,l,c,i,d,u,p,v,b){const k=l.load("jupyterlab");const h=e.serviceManager;const{commands:y,shell:x}=e;const w=k.__("Console");b=b!==null&&b!==void 0?b:r.sessionContextDialogs;const S=new r.WidgetTracker({namespace:"console"});if(c){void c.restore(S,{command:_.create,args:e=>{const{path:n,name:t,kernelPreference:o}=e.console.sessionContext;return{path:n,name:t,kernelPreference:Object.assign({},o)}},name:e=>{var n;return(n=e.console.sessionContext.path)!==null&&n!==void 0?n:m.UUID.uuid4()},when:h.ready})}if(p){void h.ready.then((()=>{let e=null;const n=()=>{if(e){e.dispose();e=null}const n=h.kernelspecs.specs;if(!n){return}e=new g.DisposableSet;for(const t in n.kernelspecs){const o=t===n.default?0:Infinity;const r=n.kernelspecs[t];let a=r.resources["logo-64x64"];e.add(p.add({command:_.create,args:{isLauncher:true,kernelPreference:{name:t}},category:k.__("Console"),rank:o,kernelIconUrl:a,metadata:{kernel:m.JSONExt.deepCopy(r.metadata||{})}}))}};n();h.kernelspecs.specsChanged.connect(n)}))}async function I(e){var r;await h.ready;const c=new s.ConsolePanel(Object.assign({manager:h,contentFactory:n,mimeTypeService:t.mimeTypeService,rendermime:o,translator:l,setBusy:(r=v&&(()=>v.setBusy()))!==null&&r!==void 0?r:undefined},e));const i=(await a.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;c.console.node.dataset.jpInteractionMode=i;await S.add(c);c.sessionContext.propertyChanged.connect((()=>{void S.save(c)}));x.add(c,"main",{ref:e.ref,mode:e.insertMode,activate:e.activate!==false});return c}const B=(e,n,t)=>{if(n[t]===undefined){return}switch(t){case"autoClosingBrackets":e.setOption("autoClosingBrackets",n["autoClosingBrackets"]);break;case"cursorBlinkRate":e.setOption("cursorBlinkRate",n["cursorBlinkRate"]);break;case"fontFamily":e.setOption("fontFamily",n["fontFamily"]);break;case"fontSize":e.setOption("fontSize",n["fontSize"]);break;case"lineHeight":e.setOption("lineHeight",n["lineHeight"]);break;case"lineNumbers":e.setOption("lineNumbers",n["lineNumbers"]);break;case"lineWrap":e.setOption("lineWrap",n["lineWrap"]);break;case"matchBrackets":e.setOption("matchBrackets",n["matchBrackets"]);break;case"readOnly":e.setOption("readOnly",n["readOnly"]);break;case"insertSpaces":e.setOption("insertSpaces",n["insertSpaces"]);break;case"tabSize":e.setOption("tabSize",n["tabSize"]);break;case"wordWrapColumn":e.setOption("wordWrapColumn",n["wordWrapColumn"]);break;case"rulers":e.setOption("rulers",n["rulers"]);break;case"codeFolding":e.setOption("codeFolding",n["codeFolding"]);break}};const P=(e,n)=>{if(e===undefined){return}B(e,n,"autoClosingBrackets");B(e,n,"cursorBlinkRate");B(e,n,"fontFamily");B(e,n,"fontSize");B(e,n,"lineHeight");B(e,n,"lineNumbers");B(e,n,"lineWrap");B(e,n,"matchBrackets");B(e,n,"readOnly");B(e,n,"insertSpaces");B(e,n,"tabSize");B(e,n,"wordWrapColumn");B(e,n,"rulers");B(e,n,"codeFolding")};const E="@jupyterlab/console-extension:tracker";let O;let M;async function j(e){O=(await a.get(E,"interactionMode")).composite;M=(await a.get(E,"promptCellConfig")).composite;const n=e=>{var n;e.console.node.dataset.jpInteractionMode=O;e.console.editorConfig=M;P((n=e.console.promptCell)===null||n===void 0?void 0:n.editor,M)};if(e){n(e)}else{S.forEach(n)}}a.pluginChanged.connect(((e,n)=>{if(n===E){void j()}}));await j();S.widgetAdded.connect(((e,n)=>{void j(n)}));y.addCommand(_.autoClosingBrackets,{execute:async e=>{var n;M.autoClosingBrackets=!!((n=e["force"])!==null&&n!==void 0?n:!M.autoClosingBrackets);await a.set(E,"promptCellConfig",M)},label:k.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>M.autoClosingBrackets});function F(){return S.currentWidget!==null&&S.currentWidget===x.currentWidget}let W=_.open;y.addCommand(W,{execute:e=>{const n=e["path"];const t=S.find((e=>{var t;return((t=e.console.sessionContext.session)===null||t===void 0?void 0:t.path)===n}));if(t){if(e.activate!==false){x.activateById(t.id)}return t}else{return h.ready.then((()=>{const t=(0,C.find)(h.sessions.running(),(e=>e.path===n));if(t){return I(e)}return Promise.reject(`No running kernel session for path: ${n}`)}))}}});W=_.create;y.addCommand(W,{label:e=>{var n,t,o,r;if(e["isPalette"]){return k.__("New Console")}else if(e["isLauncher"]&&e["kernelPreference"]){const a=e["kernelPreference"];return(r=(o=(t=(n=h.kernelspecs)===null||n===void 0?void 0:n.specs)===null||t===void 0?void 0:t.kernelspecs[a.name||""])===null||o===void 0?void 0:o.display_name)!==null&&r!==void 0?r:""}return k.__("Console")},icon:e=>e["isPalette"]?undefined:f.consoleIcon,execute:e=>{var n;const t=(n=e["basePath"]||e["cwd"]||(i===null||i===void 0?void 0:i.defaultBrowser.model.path))!==null&&n!==void 0?n:"";return I(Object.assign({basePath:t},e))}});function A(e){const n=S.currentWidget;const t=e["activate"]!==false;if(t&&n){x.activateById(n.id)}return n!==null&&n!==void 0?n:null}y.addCommand(_.clear,{label:k.__("Clear Console Cells"),execute:e=>{const n=A(e);if(!n){return}n.console.clear()},isEnabled:F});y.addCommand(_.runUnforced,{label:k.__("Run Cell (unforced)"),execute:e=>{const n=A(e);if(!n){return}return n.console.execute()},isEnabled:F});y.addCommand(_.runForced,{label:k.__("Run Cell (forced)"),execute:e=>{const n=A(e);if(!n){return}return n.console.execute(true)},isEnabled:F});y.addCommand(_.linebreak,{label:k.__("Insert Line Break"),execute:e=>{const n=A(e);if(!n){return}n.console.insertLinebreak()},isEnabled:F});y.addCommand(_.replaceSelection,{label:k.__("Replace Selection in Console"),execute:e=>{const n=A(e);if(!n){return}const t=e["text"]||"";n.console.replaceSelection(t)},isEnabled:F});y.addCommand(_.interrupt,{label:k.__("Interrupt Kernel"),execute:e=>{var n;const t=A(e);if(!t){return}const o=(n=t.console.sessionContext.session)===null||n===void 0?void 0:n.kernel;if(o){return o.interrupt()}},isEnabled:F});y.addCommand(_.restart,{label:k.__("Restart Kernel…"),execute:e=>{const n=A(e);if(!n){return}return b.restart(n.console.sessionContext,l)},isEnabled:F});y.addCommand(_.closeAndShutdown,{label:k.__("Close and Shut Down…"),execute:e=>{const n=A(e);if(!n){return}return(0,r.showDialog)({title:k.__("Shut down the console?"),body:k.__('Are you sure you want to close "%1"?',n.title.label),buttons:[r.Dialog.cancelButton(),r.Dialog.warnButton()]}).then((e=>{if(e.button.accept){return n.console.sessionContext.shutdown().then((()=>{n.dispose();return true}))}else{return false}}))},isEnabled:F});y.addCommand(_.inject,{execute:e=>{const n=e["path"];S.find((t=>{var o;if(((o=t.console.sessionContext.session)===null||o===void 0?void 0:o.path)===n){if(e["activate"]!==false){x.activateById(t.id)}void t.console.inject(e["code"],e["metadata"]);return true}return false}))},isEnabled:F});y.addCommand(_.changeKernel,{label:k.__("Change Kernel…"),execute:e=>{const n=A(e);if(!n){return}return b.selectKernel(n.console.sessionContext,l)},isEnabled:F});if(u){[_.create,_.linebreak,_.clear,_.runUnforced,_.runForced,_.restart,_.interrupt,_.changeKernel,_.closeAndShutdown].forEach((e=>{u.addItem({command:e,category:w,args:{isPalette:true}})}))}if(d){d.fileMenu.closeAndCleaners.add({tracker:S,closeAndCleanupLabel:e=>k.__("Shutdown Console"),closeAndCleanup:e=>(0,r.showDialog)({title:k.__("Shut down the Console?"),body:k.__('Are you sure you want to close "%1"?',e.title.label),buttons:[r.Dialog.cancelButton(),r.Dialog.warnButton()]}).then((n=>{if(n.button.accept){return e.console.sessionContext.shutdown().then((()=>{e.dispose()}))}else{return void 0}}))});d.kernelMenu.kernelUsers.add({tracker:S,restartKernelAndClearLabel:e=>k.__("Restart Kernel and Clear Console"),interruptKernel:e=>{var n;const t=(n=e.console.sessionContext.session)===null||n===void 0?void 0:n.kernel;if(t){return t.interrupt()}return Promise.resolve(void 0)},restartKernel:e=>b.restart(e.console.sessionContext,l),restartKernelAndClear:e=>b.restart(e.console.sessionContext).then((n=>{if(n){e.console.clear()}return n})),changeKernel:e=>b.selectKernel(e.console.sessionContext,l),shutdownKernel:e=>e.console.sessionContext.shutdown()});d.runMenu.codeRunners.add({tracker:S,runLabel:e=>k.__("Run Cell"),run:e=>e.console.execute(true)});d.editMenu.clearers.add({tracker:S,clearCurrentLabel:e=>k.__("Clear Console Cell"),clearCurrent:e=>e.console.clear()})}const K={notebook:k.__("Execute with Shift+Enter"),terminal:k.__("Execute with Enter")};y.addCommand(_.interactionMode,{label:e=>K[e["interactionMode"]]||"",execute:async e=>{const n="keyMap";try{await a.set(E,"interactionMode",e["interactionMode"])}catch(t){console.error(`Failed to set ${E}:${n} - ${t.message}`)}},isToggled:e=>e["interactionMode"]===O});if(d){d.helpMenu.kernelUsers.add({tracker:S,getKernel:e=>{var n;return(n=e.sessionContext.session)===null||n===void 0?void 0:n.kernel}})}return S}}}]);
//# sourceMappingURL=7824.c7cb2c687133f08e4b06.js.map?v=c7cb2c687133f08e4b06
(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[5970],{95970:(e,t,i)=>{"use strict";i.r(t);i.d(t,{DefaultSchemaValidator:()=>m,ISettingRegistry:()=>b,SettingRegistry:()=>f,Settings:()=>g});var n=i(14765);var s=i(98034);var r=i(15989);var a=i(8595);var o=i(84778);var c=i.n(o);var d=i(96111);const u=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema","title":"JupyterLab Plugin Settings/Preferences Schema","description":"JupyterLab plugin settings/preferences schema","version":"1.0.0","type":"object","additionalProperties":true,"properties":{"jupyter.lab.internationalization":{"type":"object","properties":{"selectors":{"type":"array","items":{"type":"string","minLength":1}},"domain":{"type":"string","minLength":1}}},"jupyter.lab.menus":{"type":"object","properties":{"main":{"title":"Main menu entries","description":"List of menu items to add to the main menubar.","items":{"$ref":"#/definitions/menu"},"type":"array","default":[]},"context":{"title":"The application context menu.","description":"List of context menu items.","items":{"allOf":[{"$ref":"#/definitions/menuItem"},{"properties":{"selector":{"description":"The CSS selector for the context menu item.","type":"string"}}}]},"type":"array","default":[]}},"additionalProperties":false},"jupyter.lab.setting-deprecated":{"type":"boolean","default":false},"jupyter.lab.setting-icon":{"type":"string","default":""},"jupyter.lab.setting-icon-class":{"type":"string","default":""},"jupyter.lab.setting-icon-label":{"type":"string","default":"Plugin"},"jupyter.lab.shortcuts":{"items":{"$ref":"#/definitions/shortcut"},"type":"array","default":[]},"jupyter.lab.toolbars":{"properties":{"^\\\\w[\\\\w-\\\\.]*$":{"items":{"$ref":"#/definitions/toolbarItem"},"type":"array","default":[]}},"type":"object","default":{}},"jupyter.lab.transform":{"type":"boolean","default":false}},"definitions":{"menu":{"properties":{"disabled":{"description":"Whether the menu is disabled or not","type":"boolean","default":false},"icon":{"description":"Menu icon id","type":"string"},"id":{"description":"Menu unique id","oneOf":[{"type":"string","enum":["jp-menu-file","jp-menu-file-new","jp-menu-edit","jp-menu-help","jp-menu-kernel","jp-menu-run","jp-menu-settings","jp-menu-view","jp-menu-tabs"]},{"type":"string","pattern":"[a-z][a-z0-9\\\\-_]+"}]},"items":{"description":"Menu items","type":"array","items":{"$ref":"#/definitions/menuItem"}},"label":{"description":"Menu label","type":"string"},"mnemonic":{"description":"Mnemonic index for the label","type":"number","minimum":-1,"default":-1},"rank":{"description":"Menu rank","type":"number","minimum":0}},"required":["id"],"type":"object"},"menuItem":{"properties":{"args":{"description":"Command arguments","type":"object"},"command":{"description":"Command id","type":"string"},"disabled":{"description":"Whether the item is disabled or not","type":"boolean","default":false},"type":{"description":"Item type","type":"string","enum":["command","submenu","separator"],"default":"command"},"rank":{"description":"Item rank","type":"number","minimum":0},"submenu":{"oneOf":[{"$ref":"#/definitions/menu"},{"type":"null"}]}},"type":"object"},"shortcut":{"properties":{"args":{"title":"The arguments for the command","type":"object"},"command":{"title":"The command id","description":"The command executed when the binding is matched.","type":"string"},"disabled":{"description":"Whether this shortcut is disabled or not.","type":"boolean","default":false},"keys":{"title":"The key sequence for the binding","description":"The key shortcut like `Accel A` or the sequence of shortcuts to press like [`Accel A`, `B`]","items":{"type":"string"},"type":"array"},"macKeys":{"title":"The key sequence for the binding on macOS","description":"The key shortcut like `Cmd A` or the sequence of shortcuts to press like [`Cmd A`, `B`]","items":{"type":"string"},"type":"array"},"winKeys":{"title":"The key sequence for the binding on Windows","description":"The key shortcut like `Ctrl A` or the sequence of shortcuts to press like [`Ctrl A`, `B`]","items":{"type":"string"},"type":"array"},"linuxKeys":{"title":"The key sequence for the binding on Linux","description":"The key shortcut like `Ctrl A` or the sequence of shortcuts to press like [`Ctrl A`, `B`]","items":{"type":"string"},"type":"array"},"selector":{"title":"CSS selector","type":"string"}},"required":["command","keys","selector"],"type":"object"},"toolbarItem":{"properties":{"name":{"title":"Unique name","type":"string"},"args":{"title":"Command arguments","type":"object"},"command":{"title":"Command id","type":"string","default":""},"disabled":{"title":"Whether the item is ignored or not","type":"boolean","default":false},"icon":{"title":"Item icon id","description":"If defined, it will override the command icon","type":"string"},"label":{"title":"Item label","description":"If defined, it will override the command label","type":"string"},"type":{"title":"Item type","type":"string","enum":["command","spacer"]},"rank":{"title":"Item rank","type":"number","minimum":0,"default":50}},"required":["name"],"additionalProperties":false,"type":"object"}}}');const l=s.JSONExt.deepCopy;const p=1e3;const h=String.fromCharCode(30);class m{constructor(){this._composer=new(c())({useDefaults:true});this._validator=new(c());this._composer.addSchema(u,"jupyterlab-plugin-schema");this._validator.addSchema(u,"jupyterlab-plugin-schema")}validateData(e,t=true){const i=this._validator.getSchema(e.id);const n=this._composer.getSchema(e.id);if(!i||!n){if(e.schema.type!=="object"){const t="schema";const i=`Setting registry schemas' root-level type must be `+`'object', rejecting type: ${e.schema.type}`;return[{dataPath:"type",keyword:t,schemaPath:"",message:i}]}const t=this._addSchema(e.id,e.schema);return t||this.validateData(e)}let s;try{s=d.parse(e.raw)}catch(a){if(a instanceof SyntaxError){return[{dataPath:"",keyword:"syntax",schemaPath:"",message:a.message}]}const{column:e,description:t}=a;const i=a.lineNumber;return[{dataPath:"",keyword:"parse",schemaPath:"",message:`${t} (line ${i} column ${e})`}]}if(!i(s)){return i.errors}const r=l(s);if(!n(r)){return n.errors}if(t){e.data={composite:r,user:s}}return null}_addSchema(e,t){const i=this._composer;const n=this._validator;const s=n.getSchema("jupyterlab-plugin-schema");if(!s(t)){return s.errors}if(!n.validateSchema(t)){return n.errors}i.removeSchema(e);n.removeSchema(e);i.addSchema(t,e);n.addSchema(t,e);return null}}class f{constructor(e){this.schema=u;this.plugins=Object.create(null);this._pluginChanged=new a.Signal(this);this._ready=Promise.resolve();this._transformers=Object.create(null);this.connector=e.connector;this.validator=e.validator||new m;this._timeout=e.timeout||p;if(e.plugins){this._ready=this._preload(e.plugins)}}get pluginChanged(){return this._pluginChanged}async get(e,t){await this._ready;const i=this.plugins;if(e in i){const{composite:n,user:s}=i[e].data;return{composite:n[t]!==undefined?l(n[t]):undefined,user:s[t]!==undefined?l(s[t]):undefined}}return this.load(e).then((()=>this.get(e,t)))}async load(e){await this._ready;const t=this.plugins;const i=this;if(e in t){return new g({plugin:t[e],registry:i})}return this.reload(e)}async reload(e){await this._ready;const t=await this.connector.fetch(e);const i=this.plugins;const n=this;if(t===undefined){throw[{dataPath:"",keyword:"id",message:`Could not fetch settings for ${e}.`,schemaPath:""}]}await this._load(await this._transform("fetch",t));this._pluginChanged.emit(e);return new g({plugin:i[e],registry:n})}async remove(e,t){await this._ready;const i=this.plugins;if(!(e in i)){return}const n=d.parse(i[e].raw);delete n[t];delete n[`// ${t}`];i[e].raw=y.annotatedPlugin(i[e],n);return this._save(e)}async set(e,t,i){await this._ready;const n=this.plugins;if(!(e in n)){return this.load(e).then((()=>this.set(e,t,i)))}const s=d.parse(n[e].raw);n[e].raw=y.annotatedPlugin(n[e],Object.assign(Object.assign({},s),{[t]:i}));return this._save(e)}transform(e,t){const i=this._transformers;if(e in i){throw new Error(`${e} already has a transformer.`)}i[e]={fetch:t.fetch||(e=>e),compose:t.compose||(e=>e)};return new r.DisposableDelegate((()=>{delete i[e]}))}async upload(e,t){await this._ready;const i=this.plugins;if(!(e in i)){return this.load(e).then((()=>this.upload(e,t)))}i[e].raw=t;return this._save(e)}async _load(e){const t=e.id;try{await this._validate(e)}catch(i){const e=[`Validating ${t} failed:`];i.forEach(((t,i)=>{const{dataPath:n,schemaPath:s,keyword:r,message:a}=t;if(n||s){e.push(`${i} - schema @ ${s}, data @ ${n}`)}e.push(`{${r}} ${a}`)}));console.warn(e.join("\n"));throw i}}async _preload(e){await Promise.all(e.map((async e=>{var t;try{await this._load(await this._transform("fetch",e))}catch(i){if(((t=i[0])===null||t===void 0?void 0:t.keyword)!=="timeout"){console.warn("Ignored setting registry preload errors.",i)}}})))}async _save(e){const t=this.plugins;if(!(e in t)){throw new Error(`${e} does not exist in setting registry.`)}try{await this._validate(t[e])}catch(n){console.warn(`${e} validation errors:`,n);throw new Error(`${e} failed to validate; check console.`)}await this.connector.save(e,t[e].raw);const i=await this.connector.fetch(e);if(i===undefined){throw[{dataPath:"",keyword:"id",message:`Could not fetch settings for ${e}.`,schemaPath:""}]}await this._load(await this._transform("fetch",i));this._pluginChanged.emit(e)}async _transform(e,t,i=(new Date).getTime()){const n=(new Date).getTime()-i;const s=t.id;const r=this._transformers;const a=this._timeout;if(!t.schema["jupyter.lab.transform"]){return t}if(s in r){const i=r[s][e].call(null,t);if(i.id!==s){throw[{dataPath:"",keyword:"id",message:"Plugin transformations cannot change plugin IDs.",schemaPath:""}]}return i}if(n<a){await new Promise((e=>{setTimeout((()=>{e()}),250)}));return this._transform(e,t,i)}throw[{dataPath:"",keyword:"timeout",message:`Transforming ${t.id} timed out.`,schemaPath:""}]}async _validate(e){const t=this.validator.validateData(e);if(t){throw t}this.plugins[e.id]=await this._transform("compose",e)}}class g{constructor(e){this._changed=new a.Signal(this);this._isDisposed=false;this.id=e.plugin.id;this.registry=e.registry;this.registry.pluginChanged.connect(this._onPluginChanged,this)}get changed(){return this._changed}get composite(){return this.plugin.data.composite}get isDisposed(){return this._isDisposed}get plugin(){return this.registry.plugins[this.id]}get schema(){return this.plugin.schema}get raw(){return this.plugin.raw}isDefault(e){for(const t in this.schema.properties){const i=e[t];const n=this.default(t);if(i===undefined||n===undefined||s.JSONExt.deepEqual(i,s.JSONExt.emptyObject)||s.JSONExt.deepEqual(i,s.JSONExt.emptyArray)){continue}if(!s.JSONExt.deepEqual(i,n)){return false}}return true}get isModified(){return!this.isDefault(this.user)}get user(){return this.plugin.data.user}get version(){return this.plugin.version}annotatedDefaults(){return y.annotatedDefaults(this.schema,this.id)}default(e){return y.reifyDefault(this.schema,e)}dispose(){if(this._isDisposed){return}this._isDisposed=true;a.Signal.clearData(this)}get(e){const{composite:t,user:i}=this;return{composite:t[e]!==undefined?l(t[e]):undefined,user:i[e]!==undefined?l(i[e]):undefined}}remove(e){return this.registry.remove(this.plugin.id,e)}save(e){return this.registry.upload(this.plugin.id,e)}set(e,t){return this.registry.set(this.plugin.id,e,t)}validate(e){const t={composite:{},user:{}};const{id:i,schema:n}=this.plugin;const s=this.registry.validator;const r=this.version;return s.validateData({data:t,id:i,raw:e,schema:n,version:r},false)}_onPluginChanged(e,t){if(t===this.plugin.id){this._changed.emit(undefined)}}}(function(e){function t(e,t,n=false,r=true){if(!e){return t&&r?s.JSONExt.deepCopy(t):[]}if(!t){return s.JSONExt.deepCopy(e)}const a=s.JSONExt.deepCopy(e);t.forEach((e=>{const t=a.findIndex((t=>t.id===e.id));if(t>=0){a[t]=Object.assign(Object.assign(Object.assign({},a[t]),e),{items:i(a[t].items,e.items,n,r)})}else{if(r){a.push(e)}}}));return a}e.reconcileMenus=t;function i(e,i,n=false,r=true){if(!e){return i?s.JSONExt.deepCopy(i):undefined}if(!i){return s.JSONExt.deepCopy(e)}const a=s.JSONExt.deepCopy(e);i.forEach((e=>{var i;switch((i=e.type)!==null&&i!==void 0?i:"command"){case"separator":if(r){a.push(Object.assign({},e))}break;case"submenu":if(e.submenu){const i=a.findIndex((t=>{var i,n;return t.type==="submenu"&&((i=t.submenu)===null||i===void 0?void 0:i.id)===((n=e.submenu)===null||n===void 0?void 0:n.id)}));if(i<0){if(r){a.push(s.JSONExt.deepCopy(e))}}else{a[i]=Object.assign(Object.assign(Object.assign({},a[i]),e),{submenu:t(a[i].submenu?[a[i].submenu]:null,[e.submenu],n,r)[0]})}}break;case"command":if(e.command){const t=a.findIndex((t=>{var i,n;return t.command===e.command&&t.selector===e.selector&&s.JSONExt.deepEqual((i=t.args)!==null&&i!==void 0?i:{},(n=e.args)!==null&&n!==void 0?n:{})}));if(t<0){if(r){a.push(Object.assign({},e))}}else{if(n){console.warn(`Menu entry for command '${e.command}' is duplicated.`)}a[t]=Object.assign(Object.assign({},a[t]),e)}}}}));return a}e.reconcileItems=i;function r(e){return e.reduce(((e,t)=>{var i;const n=Object.assign({},t);if(!n.disabled){if(n.type==="submenu"){const{submenu:e}=n;if(e&&!e.disabled){n.submenu=Object.assign(Object.assign({},e),{items:r((i=e.items)!==null&&i!==void 0?i:[])})}}e.push(n)}return e}),[])}e.filterDisabledItems=r;function a(e,t){const i={};t=t.filter((e=>{const t=n.CommandRegistry.normalizeKeys(e).join(h);if(!t){console.warn("Skipping this shortcut because there are no actionable keys on this platform",e);return false}if(!(t in i)){i[t]={}}const{selector:s}=e;if(!(s in i[t])){i[t][s]=false;return true}console.warn("Skipping this shortcut because it collides with another shortcut.",e);return false}));e=[...e.filter((e=>!!e.disabled)),...e.filter((e=>!e.disabled))].filter((e=>{const t=n.CommandRegistry.normalizeKeys(e).join(h);if(!t){return false}if(!(t in i)){i[t]={}}const{disabled:s,selector:r}=e;if(!(r in i[t])){i[t][r]=!s;return true}if(i[t][r]){console.warn("Skipping this default shortcut because it collides with another default shortcut.",e)}return false}));return t.concat(e).filter((e=>!e.disabled)).map((e=>Object.assign({args:{}},e)))}e.reconcileShortcuts=a;function o(e,t,i=false){if(!e){return t?s.JSONExt.deepCopy(t):undefined}if(!t){return s.JSONExt.deepCopy(e)}const n=s.JSONExt.deepCopy(e);t.forEach((e=>{switch(e.type){case"command":if(e.command){const t=n.findIndex((t=>{var i,n;return t.name===e.name&&t.command===e.command&&s.JSONExt.deepEqual((i=t.args)!==null&&i!==void 0?i:{},(n=e.args)!==null&&n!==void 0?n:{})}));if(t<0){n.push(Object.assign({},e))}else{if(i){console.warn(`Toolbar item for command '${e.command}' is duplicated.`)}n[t]=Object.assign(Object.assign({},n[t]),e)}}break;case"spacer":default:{const t=n.findIndex((t=>t.name===e.name));if(t<0){n.push(Object.assign({},e))}else{if(i){console.warn(`Toolbar item '${e.name}' is duplicated.`)}n[t]=Object.assign(Object.assign({},n[t]),e)}}}}));return n}e.reconcileToolbarItems=o})(f||(f={}));var y;(function(e){const t="    ";const i="[missing schema description]";const n="[missing schema title]";function r(e,t){const{description:s,properties:r,title:a}=e;const c=r?Object.keys(r).sort(((e,t)=>e.localeCompare(t))):[];const l=Math.max((s||i).length,t.length);return["{",u(`${a||n}`),u(t),u(s||i),u("*".repeat(l)),"",d(c.map((t=>o(e,t)))),"}"].join("\n")}e.annotatedDefaults=r;function a(e,t){const{description:s,title:r}=e.schema;const a=Object.keys(t).sort(((e,t)=>e.localeCompare(t)));const o=Math.max((s||i).length,e.id.length);return["{",u(`${r||n}`),u(e.id),u(s||i),u("*".repeat(o)),"",d(a.map((i=>c(e.schema,i,t[i])))),"}"].join("\n")}e.annotatedPlugin=a;function o(e,n){const s=e.properties&&e.properties[n]||{};const r=s["type"];const a=s["description"]||i;const o=s["title"]||"";const c=l(e,n);const d=t.length;const p=c!==undefined?u(`"${n}": ${JSON.stringify(c,null,d)}`,t):u(`"${n}": ${r}`);return[u(o),u(a),p].filter((e=>e.length)).join("\n")}function c(e,s,r){const a=e.properties&&e.properties[s];const o=a&&a["description"]||i;const c=a&&a["title"]||n;const d=t.length;const l=u(`"${s}": ${JSON.stringify(r,null,d)}`,t);return[u(c),u(o),l].join("\n")}function d(e){return e.reduce(((t,i,n)=>{const s=i.split("\n");const r=s[s.length-1];const a=r.trim().indexOf("//")===0;const o=a||n===e.length-1?"":",";const c=n===e.length-1?"":"\n\n";return t+i+o+c}),"")}function u(e,i=`${t}// `){return i+e.split("\n").join(`\n${i}`)}function l(e,t){var i,n,r;const a=e.definitions;e=(t?(i=e.properties)===null||i===void 0?void 0:i[t]:e)||{};if(e.type==="object"){const t=s.JSONExt.deepCopy(e.default);const i=e.properties||{};for(const e in i){t[e]=l(i[e])}return t}else if(e.type==="array"){const t=s.JSONExt.deepCopy(e.default);let i=e.items||{};if(i["$ref"]&&a){const e=i["$ref"].replace("#/definitions/","");i=(n=a[e])!==null&&n!==void 0?n:{}}for(const e in t){const n=l(i)||{};for(const i in n){if((r=t[e])===null||r===void 0?void 0:r[i]){n[i]=t[e][i]}}t[e]=n}return t}else{return e.default}}e.reifyDefault=l})(y||(y={}));const b=new s.Token("@jupyterlab/coreutils:ISettingRegistry")}}]);
//# sourceMappingURL=5970.6c9120af51f3850b3561.js.map?v=6c9120af51f3850b3561
"use strict";(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[7535],{37535:(e,t,s)=>{s.r(t);s.d(t,{DSVModel:()=>l});var i=s(55172);var r=s.n(i);var n=s(76221);var o=s.n(n);var a=s(96577);const h={quotes:a.G,noquotes:a.z};class l extends n.DataModel{constructor(e){super();this._rowCount=0;this._header=[];this._columnOffsets=new Uint32Array(0);this._columnOffsetsStartingRow=0;this._maxCacheGet=1e3;this._rowOffsets=new Uint32Array(0);this._delayedParse=null;this._startedParsing=false;this._doneParsing=false;this._isDisposed=false;this._ready=new i.PromiseDelegate;let{data:t,delimiter:s=",",rowDelimiter:r=undefined,quote:n='"',quoteParser:o=undefined,header:a=true,initialRows:h=500}=e;this._rawData=t;this._delimiter=s;this._quote=n;this._quoteEscaped=new RegExp(n+n,"g");this._initialRows=h;if(r===undefined){const e=t.slice(0,5e3).indexOf("\r");if(e===-1){r="\n"}else if(t[e+1]==="\n"){r="\r\n"}else{r="\r"}}this._rowDelimiter=r;if(o===undefined){o=t.indexOf(n)>=0}this._parser=o?"quotes":"noquotes";this.parseAsync();if(a===true&&this._columnCount>0){const e=[];for(let t=0;t<this._columnCount;t++){e.push(this._getField(0,t))}this._header=e}}get isDisposed(){return this._isDisposed}get ready(){return this._ready.promise}get rawData(){return this._rawData}set rawData(e){this._rawData=e}get initialRows(){return this._initialRows}set initialRows(e){this._initialRows=e}get header(){return this._header}set header(e){this._header=e}get delimiter(){return this._delimiter}get rowDelimiter(){return this._rowDelimiter}get doneParsing(){return this._doneParsing}rowCount(e){if(e==="body"){if(this._header.length===0){return this._rowCount}else{return this._rowCount-1}}return 1}columnCount(e){if(e==="body"){return this._columnCount}return 1}data(e,t,s){let i;switch(e){case"body":if(this._header.length===0){i=this._getField(t,s)}else{i=this._getField(t+1,s)}break;case"column-header":if(this._header.length===0){i=(s+1).toString()}else{i=this._header[s]}break;case"row-header":i=(t+1).toString();break;case"corner-header":i="";break;default:throw"unreachable"}return i}dispose(){if(this._isDisposed){return}this._isDisposed=true;this._columnCount=undefined;this._rowCount=undefined;this._rowOffsets=null;this._columnOffsets=null;this._rawData=null;if(this._doneParsing===false){this.ready.catch((()=>{}));this._ready.reject(undefined)}if(this._delayedParse!==null){window.clearTimeout(this._delayedParse)}}getOffsetIndex(e,t){const s=this._columnCount;let i=(e-this._columnOffsetsStartingRow)*s;if(i<0||i>this._columnOffsets.length){this._columnOffsets.fill(4294967295);this._columnOffsetsStartingRow=e;i=0}if(this._columnOffsets[i]===4294967295){let t=1;while(t<=this._maxCacheGet&&this._columnOffsets[i+t*s]===16777215){t++}const{offsets:r}=h[this._parser]({data:this._rawData,delimiter:this._delimiter,rowDelimiter:this._rowDelimiter,quote:this._quote,columnOffsets:true,maxRows:t,ncols:s,startIndex:this._rowOffsets[e]});for(let e=0;e<r.length;e++){this._columnOffsets[i+e]=r[e]}}return this._columnOffsets[i+t]}parseAsync(){let e=this._initialRows;let t=Math.pow(2,32)-1;const s=30;const i=e=>{try{this._computeRowOffsets(e)}catch(t){if(this._parser==="quotes"){console.warn(t);this._parser="noquotes";this._resetParser();this._computeRowOffsets(e)}else{throw t}}return this._doneParsing};this._resetParser();const r=i(e);if(r){return}const n=()=>{const r=i(e+t);e+=t;if(t<1e6){t*=2}if(r){this._delayedParse=null}else{this._delayedParse=window.setTimeout(n,s)}};this._delayedParse=window.setTimeout(n,s)}_computeRowOffsets(e=4294967295){var t;if(this._rowCount>=e||this._doneParsing===true){return}if(this._columnCount===undefined){this._columnCount=h[this._parser]({data:this._rawData,delimiter:this._delimiter,rowDelimiter:this._rowDelimiter,quote:this._quote,columnOffsets:true,maxRows:1}).ncols}const s=this._rowCount>0?1:0;const{nrows:i,offsets:r}=h[this._parser]({data:this._rawData,startIndex:(t=this._rowOffsets[this._rowCount-s])!==null&&t!==void 0?t:0,delimiter:this._delimiter,rowDelimiter:this._rowDelimiter,quote:this._quote,columnOffsets:false,maxRows:e-this._rowCount+s});if(this._startedParsing&&i<=s){this._doneParsing=true;this._ready.resolve(undefined);return}this._startedParsing=true;const n=this._rowCount;const o=Math.min(i,s);this._rowCount=n+i-o;if(this._rowCount<e){this._doneParsing=true;this._ready.resolve(undefined)}if(this._rowCount>n){const e=this._rowOffsets;this._rowOffsets=new Uint32Array(this._rowCount);this._rowOffsets.set(e);this._rowOffsets.set(r,n-o)}const a=Math.floor(33554432/this._columnCount);if(n<=a){if(this._rowCount<=a){const e=this._columnOffsets;this._columnOffsets=new Uint32Array(this._rowCount*this._columnCount);this._columnOffsets.set(e);this._columnOffsets.fill(4294967295,e.length)}else{const e=this._columnOffsets;this._columnOffsets=new Uint32Array(Math.min(this._maxCacheGet,a)*this._columnCount);this._columnOffsets.set(e.subarray(0,this._columnOffsets.length));this._columnOffsets.fill(4294967295,e.length);this._columnOffsetsStartingRow=0}}let l=n;if(this._header.length>0){l-=1}this.emitChanged({type:"rows-inserted",region:"body",index:l,span:this._rowCount-n})}_getField(e,t){let s;let i;const r=this.getOffsetIndex(e,t);let n=0;let o=0;if(t===this._columnCount-1){if(e<this._rowCount-1){i=this.getOffsetIndex(e+1,0);n+=this._rowDelimiter.length}else{i=this._rawData.length;if(this._rawData[i-1]===this._rowDelimiter[this._rowDelimiter.length-1]){n+=this._rowDelimiter.length}}}else{i=this.getOffsetIndex(e,t+1);if(r<i&&this._rawData[i-1]===this._delimiter){n+=1}}if(this._rawData[r]===this._quote){o+=1;n+=1}s=this._rawData.slice(r+o,i-n);if(o===1&&s.indexOf(this._quote)!==-1){s=s.replace(this._quoteEscaped,this._quote)}return s}_resetParser(){this._columnCount=undefined;this._rowOffsets=new Uint32Array(0);this._rowCount=0;this._startedParsing=false;this._columnOffsets=new Uint32Array(0);if(this._doneParsing===false){this.ready.catch((()=>{}));this._ready.reject(undefined)}this._doneParsing=false;this._ready=new i.PromiseDelegate;if(this._delayedParse!==null){window.clearTimeout(this._delayedParse);this._delayedParse=null}this.emitChanged({type:"model-reset"})}}},96577:(e,t,s)=>{s.d(t,{G:()=>n,z:()=>o});var i;(function(e){e[e["QUOTED_FIELD"]=0]="QUOTED_FIELD";e[e["QUOTED_FIELD_QUOTE"]=1]="QUOTED_FIELD_QUOTE";e[e["UNQUOTED_FIELD"]=2]="UNQUOTED_FIELD";e[e["NEW_FIELD"]=3]="NEW_FIELD";e[e["NEW_ROW"]=4]="NEW_ROW"})(i||(i={}));var r;(function(e){e[e["CR"]=0]="CR";e[e["CRLF"]=1]="CRLF";e[e["LF"]=2]="LF"})(r||(r={}));function n(e){const{data:t,columnOffsets:s,delimiter:n=",",startIndex:o=0,maxRows:a=4294967295,rowDelimiter:h="\r\n",quote:l='"'}=e;let u=e.ncols;let f=0;const d=[];const _=n.charCodeAt(0);const c=l.charCodeAt(0);const w=10;const m=13;const g=t.length;const{QUOTED_FIELD:O,QUOTED_FIELD_QUOTE:D,UNQUOTED_FIELD:C,NEW_FIELD:p,NEW_ROW:b}=i;const{CR:y,LF:x,CRLF:E}=r;const[$,P]=h==="\r\n"?[E,2]:h==="\r"?[y,1]:[x,1];let R=b;let k=o;let q=0;let F;while(k<g){if(R===b){d.push(k);q=1}F=t.charCodeAt(k);switch(R){case b:case p:switch(F){case c:R=O;break;case _:R=p;break;case m:if($===y){R=b}else if($===E&&t.charCodeAt(k+1)===w){k++;R=b}else{throw`string index ${k} (in row ${f}, column ${q}): carriage return found, but not as part of a row delimiter C ${t.charCodeAt(k+1)}`}break;case w:if($===x){R=b}else{throw`string index ${k} (in row ${f}, column ${q}): line feed found, but row delimiter starts with a carriage return`}break;default:R=C;break}break;case O:k=t.indexOf(l,k);if(k<0){throw`string index ${k} (in row ${f}, column ${q}): mismatched quote`}R=D;break;case D:switch(F){case c:R=O;break;case _:R=p;break;case m:if($===y){R=b}else if($===E&&t.charCodeAt(k+1)===w){k++;R=b}else{throw`string index ${k} (in row ${f}, column ${q}): carriage return found, but not as part of a row delimiter C ${t.charCodeAt(k+1)}`}break;case w:if($===x){R=b}else{throw`string index ${k} (in row ${f}, column ${q}): line feed found, but row delimiter starts with a carriage return`}break;default:throw`string index ${k} (in row ${f}, column ${q}): quote in escaped field not followed by quote, delimiter, or row delimiter`}break;case C:while(k<g){F=t.charCodeAt(k);if(F===_||F===w||F===m){break}k++}switch(F){case _:R=p;break;case m:if($===y){R=b}else if($===E&&t.charCodeAt(k+1)===w){k++;R=b}else{throw`string index ${k} (in row ${f}, column ${q}): carriage return found, but not as part of a row delimiter C ${t.charCodeAt(k+1)}`}break;case w:if($===x){R=b}else{throw`string index ${k} (in row ${f}, column ${q}): line feed found, but row delimiter starts with a carriage return`}break;default:continue}break;default:throw`string index ${k} (in row ${f}, column ${q}): state not recognized`}k++;switch(R){case b:f++;if(u===undefined){if(f!==1){throw new Error("Error parsing default number of columns")}u=q}if(s===true){if(q<u){for(;q<u;q++){d.push(k-P)}}else if(q>u){d.length=d.length-(q-u)}}if(f===a){return{nrows:f,ncols:s?u:0,offsets:d}}break;case p:if(s===true){d.push(k)}q++;break;default:break}}if(R!==b){f++;if(s===true){if(u===undefined){u=q}if(q<u){for(;q<u;q++){d.push(k-(P-1))}}else if(q>u){d.length=d.length-(q-u)}}}return{nrows:f,ncols:s?u!==null&&u!==void 0?u:0:0,offsets:d}}function o(e){const{data:t,columnOffsets:s,delimiter:i=",",rowDelimiter:r="\r\n",startIndex:n=0,maxRows:o=4294967295}=e;let a=e.ncols;const h=[];let l=0;const u=r.length;let f=n;const d=t.length;let _;let c;let w;let m;let g;_=n;while(_!==-1&&l<o&&f<d){h.push(f);l++;_=t.indexOf(r,f);g=_===-1?d:_;if(s===true){c=1;w=t.slice(f,g);m=w.indexOf(i);if(a===undefined){while(m!==-1){h.push(f+m+1);c++;m=w.indexOf(i,m+1)}a=c}else{while(m!==-1&&c<a){h.push(f+m+1);c++;m=w.indexOf(i,m+1)}while(c<a){h.push(g);c++}}}f=g+u}return{nrows:l,ncols:s?a!==null&&a!==void 0?a:0:0,offsets:h}}}}]);
//# sourceMappingURL=7535.232eac626d8d0651326d.js.map?v=232eac626d8d0651326d
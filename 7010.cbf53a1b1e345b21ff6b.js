"use strict";(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[7010],{87010:(e,t,n)=>{n.r(t);n.d(t,{RunningLanguageServer:()=>w,default:()=>x});var r=n(97540);var a=n(45114);var s=n(68299);var o=n(50724);var i=n(27425);var c=n(19289);var l=n(55172);var u=n(65061);var m=n(37900);var d=n.n(m);var p=n(87447);const g="languageServers";const v="configuration";function h(e){const{[v]:t,...n}=e.schema;const{[v]:r,serverName:a,...s}=e.settings;const[o,i]=(0,m.useState)(a);const c=t=>{e.updateSetting.invoke(e.serverHash,{serverName:t.target.value}).catch(console.error);i(t.target.value)};const g={};Object.entries(r).forEach((([e,t])=>{const n={property:e,type:typeof t,value:t};g[l.UUID.uuid4()]=n}));const[h,S]=(0,m.useState)(g);const E={};Object.entries(n).forEach((([e,t])=>{if(e in s){E[e]=s[e]}else{E[e]=t["default"]}}));const[y,b]=(0,m.useState)(E);const j=(t,n,r)=>{let a=n;if(r==="number"){a=parseFloat(n)}const s={...y,[t]:a};e.updateSetting.invoke(e.serverHash,s).catch(console.error);b(s)};const _=()=>{const t=l.UUID.uuid4();const n={...h,[t]:{property:"",type:"string",value:""}};const r={};Object.values(n).forEach((e=>{r[e.property]=e.value}));e.updateSetting.invoke(e.serverHash,{[v]:r}).catch(console.error);S(n)};const N=t=>{const n={};Object.entries(h).forEach((([r,a])=>{if(r!==t){n[r]=a}const s={};Object.values(n).forEach((e=>{s[e.property]=e.value}));e.updateSetting.invoke(e.serverHash,{[v]:s}).catch(console.error);S(n)}))};const k=(t,n)=>{if(t in h){const r={...h,[t]:n};const a={};Object.values(r).forEach((e=>{a[e.property]=e.value}));S(r);e.updateSetting.invoke(e.serverHash,{[v]:a}).catch(console.error)}};const w=new u.Debouncer(k);const C=(0,m.useRef)(p.DOMUtils.createDomID()+"-line-number-input");return d().createElement("div",{className:"array-item"},d().createElement("div",{className:"form-group "},d().createElement("div",{className:"jp-FormGroup-content"},d().createElement("div",{className:"jp-objectFieldWrapper"},d().createElement("fieldset",null,d().createElement("div",{className:"form-group small-field"},d().createElement("div",{className:"jp-modifiedIndicator jp-errorIndicator"}),d().createElement("div",{className:"jp-FormGroup-content"},d().createElement("label",{htmlFor:C.current,className:"jp-FormGroup-fieldLabel jp-FormGroup-contentItem"},e.trans.__("Server name:")),d().createElement("div",{className:"jp-inputFieldWrapper jp-FormGroup-contentItem"},d().createElement("input",{id:C.current,className:"form-control",type:"text",required:true,value:o,onChange:e=>{c(e)}})),d().createElement("div",{className:"validationErrors"},d().createElement("div",null,d().createElement("ul",{className:"error-detail bs-callout bs-callout-info"},d().createElement("li",{className:"text-danger"},e.trans.__("is a required property"))))))),Object.entries(n).map((([e,t],n)=>d().createElement("div",{key:`${n}-${e}`,className:"form-group small-field"},d().createElement("div",{className:"jp-FormGroup-content"},d().createElement("h3",{className:"jp-FormGroup-fieldLabel jp-FormGroup-contentItem"},t.title),d().createElement("div",{className:"jp-inputFieldWrapper jp-FormGroup-contentItem"},d().createElement("input",{className:"form-control",placeholder:"",type:t.type,value:y[e],onChange:n=>j(e,n.target.value,t.type)})),d().createElement("div",{className:"jp-FormGroup-description"},t.description),d().createElement("div",{className:"validationErrors"}))))),d().createElement("fieldset",null,d().createElement("legend",null,t["title"]),Object.entries(h).map((([e,t])=>d().createElement(f,{key:e,hash:e,property:t,removeProperty:N,setProperty:w}))),d().createElement("span",null,t["description"])))))),d().createElement("div",{className:"jp-ArrayOperations"},d().createElement("button",{className:"jp-mod-styled jp-mod-reject",onClick:_},e.trans.__("Add property")),d().createElement("button",{className:"jp-mod-styled jp-mod-warn jp-FormGroup-removeButton",onClick:()=>e.removeSetting(e.serverHash)},e.trans.__("Remove server"))))}function f(e){const[t,n]=(0,m.useState)({...e.property});const r={string:"text",number:"number",boolean:"checkbox"};const a=()=>{e.removeProperty(e.hash)};const s=r=>{const a={...t,property:r};e.setProperty.invoke(e.hash,a).catch(console.error);n(a)};const o=(r,a)=>{let s=r;if(a==="number"){s=parseFloat(r)}const o={...t,value:s};e.setProperty.invoke(e.hash,o).catch(console.error);n(o)};const c=r=>{let a;if(r==="boolean"){a=false}else if(r==="number"){a=0}else{a=""}const s={...t,type:r,value:a};n(s);e.setProperty.invoke(e.hash,s).catch(console.error)};return d().createElement("div",{key:e.hash,className:"form-group small-field"},d().createElement("div",{className:"jp-FormGroup-content jp-LSPExtension-FormGroup-content"},d().createElement("input",{className:"form-control",type:"text",required:true,placeholder:"Property name",value:t.property,onChange:e=>{s(e.target.value)}}),d().createElement("select",{className:"form-control",value:t.type,onChange:e=>c(e.target.value)},d().createElement("option",{value:"string"},"String"),d().createElement("option",{value:"number"},"Number"),d().createElement("option",{value:"boolean"},"Boolean")),d().createElement("input",{className:"form-control",type:r[t.type],required:false,placeholder:"Property value",value:t.type!=="boolean"?t.value:undefined,checked:t.type==="boolean"?t.value:undefined,onChange:t.type!=="boolean"?e=>o(e.target.value,t.type):e=>o(e.target.checked,t.type)}),d().createElement("button",{className:"jp-mod-minimal jp-Button",onClick:a},d().createElement(i.closeIcon.react,null))))}class S extends d().Component{constructor(e){super(e);this.removeSetting=e=>{if(e in this.state.items){const t={};for(const n in this.state.items){if(n!==e){t[n]=this.state.items[n]}}this.setState((e=>({...e,items:t})),(()=>{this.saveServerSetting()}))}};this.updateSetting=(e,t)=>{if(e in this.state.items){const n={};for(const r in this.state.items){if(r===e){n[r]={...this.state.items[r],...t}}else{n[r]=this.state.items[r]}}this.setState((e=>({...e,items:n})),(()=>{this.saveServerSetting()}))}};this.addServerSetting=()=>{let e=0;let t="newKey";while(Object.values(this.state.items).map((e=>e.serverName)).includes(t)){e+=1;t=`newKey-${e}`}this.setState((e=>({...e,items:{...e.items,[l.UUID.uuid4()]:{...this._defaultSetting,serverName:t}}})),(()=>{this.saveServerSetting()}))};this.saveServerSetting=()=>{const e={};Object.values(this.state.items).forEach((t=>{const{serverName:n,...r}=t;e[n]=r}));this._setting.set(g,e).catch(console.error)};this._setting=e.formContext.settings;this._trans=e.translator.load("jupyterlab");const t=this._setting.schema["definitions"];this._defaultSetting=t["languageServer"]["default"];this._schema=t["languageServer"]["properties"];const n=e.schema.title;const r=e.schema.description;const a=e.formContext.settings;const s=a.get(g).composite;let o={};if(s){Object.entries(s).forEach((([e,t])=>{if(t){const n=l.UUID.uuid4();o[n]={serverName:e,...t}}}))}this.state={title:n,desc:r,items:o};this._debouncedUpdateSetting=new u.Debouncer(this.updateSetting.bind(this))}render(){return d().createElement("div",null,d().createElement("fieldset",null,d().createElement("legend",null,this.state.title),d().createElement("p",{className:"field-description"},this.state.desc),d().createElement("div",{className:"field field-array field-array-of-object"},Object.entries(this.state.items).map((([e,t],n)=>d().createElement(h,{key:`${n}-${e}`,trans:this._trans,removeSetting:this.removeSetting,updateSetting:this._debouncedUpdateSetting,serverHash:e,settings:t,schema:this._schema})))),d().createElement("div",null,d().createElement("button",{style:{margin:2},className:"jp-mod-styled jp-mod-reject",onClick:this.addServerSetting},this._trans.__("Add server")))))}}function E(e,t){return d().createElement(S,{...e,translator:t})}const y={activate:N,id:"@jupyterlab/lsp-extension:plugin",description:"Provides the language server connection manager.",requires:[o.ITranslator,r.IWidgetLSPAdapterTracker],optional:[a.IRunningSessionManagers],provides:r.ILSPDocumentConnectionManager,autoStart:true};const b={id:"@jupyterlab/lsp-extension:feature",description:"Provides the language server feature manager.",activate:()=>new r.FeatureManager,provides:r.ILSPFeatureManager,autoStart:true};const j={activate:k,id:"@jupyterlab/lsp-extension:settings",description:"Provides the language server settings.",requires:[r.ILSPDocumentConnectionManager,s.ISettingRegistry,o.ITranslator],optional:[i.IFormRendererRegistry],autoStart:true};const _={id:r.ILSPCodeExtractorsManager.name,description:"Provides the code extractor manager.",activate:e=>{const t=new r.CodeExtractorsManager;const n=new r.TextForeignCodeExtractor({language:"markdown",isStandalone:false,file_extension:"md",cellType:["markdown"]});t.register(n,null);const a=new r.TextForeignCodeExtractor({language:"text",isStandalone:false,file_extension:"txt",cellType:["raw"]});t.register(a,null);return t},provides:r.ILSPCodeExtractorsManager,autoStart:true};function N(e,t,n,a){const s=new r.LanguageServerManager({settings:e.serviceManager.serverSettings});const o=new r.DocumentConnectionManager({languageServerManager:s,adapterTracker:n});if(a){C(a,o,t)}return o}function k(e,t,n,r,a){const s="languageServers";const o=t.languageServerManager;const i=e=>{const n=e.composite;const r=n.languageServers||{};if(n.activate==="on"&&!o.isEnabled){o.enable().catch(console.error)}else if(n.activate==="off"&&o.isEnabled){o.disable();return}t.initialConfigurations=r;t.updateConfiguration(r);t.updateServerConfigurations(r);t.updateLogging(n.logAllCommunication,n.setTrace)};n.transform(y.id,{fetch:e=>{const t=e.schema.properties;const n={};o.sessions.forEach(((e,t)=>{n[t]={rank:50,configuration:{}}}));t[s]["default"]=n;return e},compose:e=>{const t=e.schema.properties;const n=e.data.user;const r=t[s]["default"];const a=n[s];let o={...r};if(a){o={...o,...a}}const i={[s]:o};Object.entries(t).forEach((([e,t])=>{if(e!==s){if(e in n){i[e]=n[e]}else{i[e]=t.default}}}));e.data.composite=i;return e}});o.sessionsChanged.connect((async()=>{await n.load(y.id,true)}));n.load(y.id).then((e=>{i(e);e.changed.connect((()=>{i(e)}));o.disable()})).catch((e=>{console.error(e.message)}));if(a){const e={fieldRenderer:e=>E(e,r)};a.addRenderer(`${y.id}.${s}`,e)}}class w{constructor(e,t){this._connection=new WeakSet([e]);this._manager=t;this._serverIdentifier=e.serverIdentifier;this._serverLanguage=e.serverLanguage}open(){}icon(){return i.pythonIcon}label(){var e,t;return`${(e=this._serverIdentifier)!==null&&e!==void 0?e:""} (${(t=this._serverLanguage)!==null&&t!==void 0?t:""})`}shutdown(){for(const[e,t]of this._manager.connections.entries()){if(this._connection.has(t)){const{uri:t}=this._manager.documents.get(e);this._manager.unregisterDocument(t)}}this._manager.disconnect(this._serverIdentifier)}}function C(e,t,n){const r=n.load("jupyterlab");const a=new c.Signal(t);t.connected.connect((()=>a.emit(t)));t.disconnected.connect((()=>a.emit(t)));t.closed.connect((()=>a.emit(t)));t.documentsChanged.connect((()=>a.emit(t)));let s=[];e.add({name:r.__("Language servers"),running:()=>{const e=new Set([...t.connections.values()]);s=[...e].map((e=>new w(e,t)));return s},shutdownAll:()=>{s.forEach((e=>{e.shutdown()}))},refreshRunning:()=>void 0,runningChanged:a,shutdownLabel:r.__("Shut Down"),shutdownAllLabel:r.__("Shut Down All"),shutdownAllConfirmationText:r.__("Are you sure you want to permanently shut down all running language servers?")})}const I={id:"@jupyterlab/lsp-extension:tracker",description:"Provides the tracker of `WidgetLSPAdapter`.",autoStart:true,provides:r.IWidgetLSPAdapterTracker,activate:e=>new r.WidgetLSPAdapterTracker({shell:e.shell})};const x=[y,b,j,_,I]}}]);
//# sourceMappingURL=7010.cbf53a1b1e345b21ff6b.js.map?v=cbf53a1b1e345b21ff6b
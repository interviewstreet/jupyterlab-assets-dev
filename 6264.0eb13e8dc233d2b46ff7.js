(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[6264,134],{86264:(e,t,r)=>{"use strict";r.r(t);r.d(t,{default:()=>I});var n=r(10890);var a=r(67616);var o=r(46514);var i=r(6471);var c=r(48305);var s=r(95994);var l=r(70278);var d=r(34325);var g=r(70865);var h=r(8595);class u{constructor(){this.matches=[];this.currentMatchIndex=null;this.isReadOnly=true;this._changed=new h.Signal(this)}static canSearchOn(e){return e instanceof g.DocumentWidget&&e.content instanceof o.CSVViewer}getInitialQuery(e){return null}async startQuery(e,t){this._target=t;this._query=e;t.content.searchService.find(e);return this.matches}async endQuery(){this._target.content.searchService.clear()}async endSearch(){this._target.content.searchService.clear()}async highlightNext(){this._target.content.searchService.find(this._query);return undefined}async highlightPrevious(){this._target.content.searchService.find(this._query,true);return undefined}async replaceCurrentMatch(e){return false}async replaceAllMatches(e){return false}get changed(){return this._changed}}const y="CSVTable";const T="TSVTable";const v={activate:_,id:"@jupyterlab/csvviewer-extension:csv",requires:[l.ITranslator],optional:[n.ILayoutRestorer,a.IThemeManager,c.IMainMenu,i.ISearchProviderRegistry,s.ISettingRegistry,a.IToolbarWidgetRegistry],autoStart:true};const C={activate:F,id:"@jupyterlab/csvviewer-extension:tsv",requires:[l.ITranslator],optional:[n.ILayoutRestorer,a.IThemeManager,c.IMainMenu,i.ISearchProviderRegistry,s.ISettingRegistry,a.IToolbarWidgetRegistry],autoStart:true};function f(e,t,r){const n=r.load("jupyterlab");e.editMenu.goToLiners.add({tracker:t,goToLine:e=>a.InputDialog.getNumber({title:n.__("Go to Line"),value:0}).then((t=>{if(t.button.accept&&t.value!==null){e.content.goToLine(t.value)}}))})}function _(e,t,r,n,i,c,s,l){let d;if(l){l.registerFactory(y,"delimiter",(e=>new o.CSVDelimiter({widget:e.content,translator:t})));if(s){d=(0,a.createToolbarFactory)(l,s,y,v.id,t)}}const g=new o.CSVViewerFactory({name:y,fileTypes:["csv"],defaultFor:["csv"],readOnly:true,toolbarFactory:d,translator:t});const h=new a.WidgetTracker({namespace:"csvviewer"});let T=L.LIGHT_STYLE;let C=L.LIGHT_TEXT_CONFIG;if(r){void r.restore(h,{command:"docmanager:open",args:e=>({path:e.context.path,factory:y}),name:e=>e.context.path})}e.docRegistry.addWidgetFactory(g);const _=e.docRegistry.getFileType("csv");g.widgetCreated.connect(((e,t)=>{void h.add(t);t.context.pathChanged.connect((()=>{void h.save(t)}));if(_){t.title.icon=_.icon;t.title.iconClass=_.iconClass;t.title.iconLabel=_.iconLabel}t.content.style=T;t.content.rendererConfig=C}));const F=()=>{const e=n&&n.theme?n.isLight(n.theme):true;T=e?L.LIGHT_STYLE:L.DARK_STYLE;C=e?L.LIGHT_TEXT_CONFIG:L.DARK_TEXT_CONFIG;h.forEach((e=>{e.content.style=T;e.content.rendererConfig=C}))};if(n){n.themeChanged.connect(F)}if(i){f(i,h,t)}if(c){c.register("csv",u)}}function F(e,t,r,n,i,c,s,l){let d;if(l){l.registerFactory(T,"delimiter",(e=>new o.CSVDelimiter({widget:e.content,translator:t})));if(s){d=(0,a.createToolbarFactory)(l,s,T,C.id,t)}}const g=new o.TSVViewerFactory({name:T,fileTypes:["tsv"],defaultFor:["tsv"],readOnly:true,toolbarFactory:d,translator:t});const h=new a.WidgetTracker({namespace:"tsvviewer"});let y=L.LIGHT_STYLE;let v=L.LIGHT_TEXT_CONFIG;if(r){void r.restore(h,{command:"docmanager:open",args:e=>({path:e.context.path,factory:T}),name:e=>e.context.path})}e.docRegistry.addWidgetFactory(g);const _=e.docRegistry.getFileType("tsv");g.widgetCreated.connect(((e,t)=>{void h.add(t);t.context.pathChanged.connect((()=>{void h.save(t)}));if(_){t.title.icon=_.icon;t.title.iconClass=_.iconClass;t.title.iconLabel=_.iconLabel}t.content.style=y;t.content.rendererConfig=v}));const F=()=>{const e=n&&n.theme?n.isLight(n.theme):true;y=e?L.LIGHT_STYLE:L.DARK_STYLE;v=e?L.LIGHT_TEXT_CONFIG:L.DARK_TEXT_CONFIG;h.forEach((e=>{e.content.style=y;e.content.rendererConfig=v}))};if(n){n.themeChanged.connect(F)}if(i){f(i,h,t)}if(c){c.register("tsv",u)}}const p=[v,C];const I=p;var L;(function(e){e.LIGHT_STYLE=Object.assign(Object.assign({},d.DataGrid.defaultStyle),{voidColor:"#F3F3F3",backgroundColor:"white",headerBackgroundColor:"#EEEEEE",gridLineColor:"rgba(20, 20, 20, 0.15)",headerGridLineColor:"rgba(20, 20, 20, 0.25)",rowBackgroundColor:e=>e%2===0?"#F5F5F5":"white"});e.DARK_STYLE=Object.assign(Object.assign({},d.DataGrid.defaultStyle),{voidColor:"black",backgroundColor:"#111111",headerBackgroundColor:"#424242",gridLineColor:"rgba(235, 235, 235, 0.15)",headerGridLineColor:"rgba(235, 235, 235, 0.25)",rowBackgroundColor:e=>e%2===0?"#212121":"#111111"});e.LIGHT_TEXT_CONFIG={textColor:"#111111",matchBackgroundColor:"#FFFFE0",currentMatchBackgroundColor:"#FFFF00",horizontalAlignment:"right"};e.DARK_TEXT_CONFIG={textColor:"#F5F5F5",matchBackgroundColor:"#838423",currentMatchBackgroundColor:"#A3807A",horizontalAlignment:"right"}})(L||(L={}))}}]);
//# sourceMappingURL=6264.0eb13e8dc233d2b46ff7.js.map?v=0eb13e8dc233d2b46ff7